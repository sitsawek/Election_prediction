> #Load data from RealClearPolitics.com
> #Instance represent a state in given election.
> polling = read.csv("PollingData.csv")
> str(polling)
'data.frame':	145 obs. of  7 variables:
 $ State     : Factor w/ 50 levels "Alabama","Alaska",..: 1 1 2 2 3 3 3 4 4 4 ...
 $ Year      : int  2004 2008 2004 2008 2004 2008 2012 2004 2008 2012 ...
 $ Rasmussen : int  11 21 NA 16 5 5 8 7 10 NA ...
 $ SurveyUSA : int  18 25 NA NA 15 NA NA 5 NA NA ...
 $ DiffCount : int  5 5 1 6 8 9 4 8 5 2 ...
 $ PropR     : num  1 1 1 1 1 ...
 $ Republican: int  1 1 1 1 1 1 1 1 1 1 ...
> polling[1,]
    State Year Rasmussen SurveyUSA DiffCount PropR Republican
1 Alabama 2004        11        18         5     1          1
> polling[1:10,]
      State Year Rasmussen SurveyUSA DiffCount     PropR Republican
1   Alabama 2004        11        18         5 1.0000000          1
2   Alabama 2008        21        25         5 1.0000000          1
3    Alaska 2004        NA        NA         1 1.0000000          1
4    Alaska 2008        16        NA         6 1.0000000          1
5   Arizona 2004         5        15         8 1.0000000          1
6   Arizona 2008         5        NA         9 1.0000000          1
7   Arizona 2012         8        NA         4 0.8333333          1
8  Arkansas 2004         7         5         8 1.0000000          1
9  Arkansas 2008        10        NA         5 1.0000000          1
10 Arkansas 2012        NA        NA         2 1.0000000          1
> #We 50 state and 3 election year.
> #We would expect 150 observation but we actually only have 145 observation.
> table(polling$Year)

2004 2008 2012 
  50   50   45 
> #But in year 2012 has 5 state they didn't perform.
> summary(polling)
         State          Year        Rasmussen          SurveyUSA          DiffCount           PropR          Republican    
 Arizona    :  3   Min.   :2004   Min.   :-41.0000   Min.   :-33.0000   Min.   :-19.000   Min.   :0.0000   Min.   :0.0000  
 Arkansas   :  3   1st Qu.:2004   1st Qu.: -8.0000   1st Qu.:-11.7500   1st Qu.: -6.000   1st Qu.:0.0000   1st Qu.:0.0000  
 California :  3   Median :2008   Median :  1.0000   Median : -2.0000   Median :  1.000   Median :0.6250   Median :1.0000  
 Colorado   :  3   Mean   :2008   Mean   :  0.0404   Mean   : -0.8243   Mean   : -1.269   Mean   :0.5259   Mean   :0.5103  
 Connecticut:  3   3rd Qu.:2012   3rd Qu.:  8.5000   3rd Qu.:  8.0000   3rd Qu.:  4.000   3rd Qu.:1.0000   3rd Qu.:1.0000  
 Florida    :  3   Max.   :2012   Max.   : 39.0000   Max.   : 30.0000   Max.   : 11.000   Max.   :1.0000   Max.   :1.0000  
 (Other)    :127                  NA's   :46         NA's   :71                                                            
> #How we can handle with missing data?
> #1)Delete observations that are missing at least one variable value.
> #Unfortunately in this case would result in throwing away more than 50% of observations.
> #We want to predict all of state.
> #2)Delete variable with missing values.
> #3)Fill missing data points with average values.
> #4)Fill missing values base on non-missing values.
> #Althroug the method is complicated,We can use it easily through R's libraries.
> #We will use multiple imputation by chained equations (mice) package.
> library("mice")
> #For out multiple imputation to be useful we have to be able to find out the values of out missing valuables.
> #Without using the outcome of Republican.
> #Limit our data frame to just the for polling related variables before we actually perform multiple imputation.
> #We're going to create new data frame called simple.
> simple = polling[c("Rasmussen","SurveyUSA","PropR","DiffCount")]
> summary(simple)
   Rasmussen          SurveyUSA            PropR          DiffCount      
 Min.   :-41.0000   Min.   :-33.0000   Min.   :0.0000   Min.   :-19.000  
 1st Qu.: -8.0000   1st Qu.:-11.7500   1st Qu.:0.0000   1st Qu.: -6.000  
 Median :  1.0000   Median : -2.0000   Median :0.6250   Median :  1.000  
 Mean   :  0.0404   Mean   : -0.8243   Mean   :0.5259   Mean   : -1.269  
 3rd Qu.:  8.5000   3rd Qu.:  8.0000   3rd Qu.:1.0000   3rd Qu.:  4.000  
 Max.   : 39.0000   Max.   : 30.0000   Max.   :1.0000   Max.   : 11.000  
 NA's   :46         NA's   :71                                           
> set.seed(144)
> imputed = complete(mice(simple))

 iter imp variable
  1   1  Rasmussen  SurveyUSA
  1   2  Rasmussen  SurveyUSA
  1   3  Rasmussen  SurveyUSA
  1   4  Rasmussen  SurveyUSA
  1   5  Rasmussen  SurveyUSA
  2   1  Rasmussen  SurveyUSA
  2   2  Rasmussen  SurveyUSA
  2   3  Rasmussen  SurveyUSA
  2   4  Rasmussen  SurveyUSA
  2   5  Rasmussen  SurveyUSA
  3   1  Rasmussen  SurveyUSA
  3   2  Rasmussen  SurveyUSA
  3   3  Rasmussen  SurveyUSA
  3   4  Rasmussen  SurveyUSA
  3   5  Rasmussen  SurveyUSA
  4   1  Rasmussen  SurveyUSA
  4   2  Rasmussen  SurveyUSA
  4   3  Rasmussen  SurveyUSA
  4   4  Rasmussen  SurveyUSA
  4   5  Rasmussen  SurveyUSA
  5   1  Rasmussen  SurveyUSA
  5   2  Rasmussen  SurveyUSA
  5   3  Rasmussen  SurveyUSA
  5   4  Rasmussen  SurveyUSA
  5   5  Rasmussen  SurveyUSA
> #Five rounds of imputation have been run and now all of variables have been filled in.
> summary(imputed)
   Rasmussen         SurveyUSA           PropR          DiffCount      
 Min.   :-41.000   Min.   :-33.000   Min.   :0.0000   Min.   :-19.000  
 1st Qu.: -8.000   1st Qu.:-11.000   1st Qu.:0.0000   1st Qu.: -6.000  
 Median :  3.000   Median :  1.000   Median :0.6250   Median :  1.000  
 Mean   :  1.731   Mean   :  1.517   Mean   :0.5259   Mean   : -1.269  
 3rd Qu.: 11.000   3rd Qu.: 18.000   3rd Qu.:1.0000   3rd Qu.:  4.000  
 Max.   : 39.000   Max.   : 30.000   Max.   :1.0000   Max.   : 11.000  
> polling$Rasmussen = imputed$Rasmussen
> polling$SurveyUSA = imputed$SurveyUSA
> summary(polling)
         State          Year        Rasmussen         SurveyUSA         DiffCount           PropR          Republican    
 Arizona    :  3   Min.   :2004   Min.   :-41.000   Min.   :-33.000   Min.   :-19.000   Min.   :0.0000   Min.   :0.0000  
 Arkansas   :  3   1st Qu.:2004   1st Qu.: -8.000   1st Qu.:-11.000   1st Qu.: -6.000   1st Qu.:0.0000   1st Qu.:0.0000  
 California :  3   Median :2008   Median :  3.000   Median :  1.000   Median :  1.000   Median :0.6250   Median :1.0000  
 Colorado   :  3   Mean   :2008   Mean   :  1.731   Mean   :  1.517   Mean   : -1.269   Mean   :0.5259   Mean   :0.5103  
 Connecticut:  3   3rd Qu.:2012   3rd Qu.: 11.000   3rd Qu.: 18.000   3rd Qu.:  4.000   3rd Qu.:1.0000   3rd Qu.:1.0000  
 Florida    :  3   Max.   :2012   Max.   : 39.000   Max.   : 30.000   Max.   : 11.000   Max.   :1.0000   Max.   :1.0000  
 (Other)    :127                                                                                                         
> #We going to train on 2004 and 2008
> #And test on 2012
> train = subset(polling,Year <=2008)
> str(train)
'data.frame':	100 obs. of  7 variables:
 $ State     : Factor w/ 50 levels "Alabama","Alaska",..: 1 1 2 2 3 3 4 4 5 5 ...
 $ Year      : int  2004 2008 2004 2008 2004 2008 2004 2008 2004 2008 ...
 $ Rasmussen : int  11 21 16 16 5 5 7 10 -11 -27 ...
 $ SurveyUSA : int  18 25 21 21 15 8 5 9 -11 -24 ...
 $ DiffCount : int  5 5 1 6 8 9 8 5 -8 -5 ...
 $ PropR     : num  1 1 1 1 1 1 1 1 0 0 ...
 $ Republican: int  1 1 1 1 1 1 1 1 0 0 ...
> #Or 
> train = subset(polling,Year == 2004 | Year == 2008)
> str(train)
'data.frame':	100 obs. of  7 variables:
 $ State     : Factor w/ 50 levels "Alabama","Alaska",..: 1 1 2 2 3 3 4 4 5 5 ...
 $ Year      : int  2004 2008 2004 2008 2004 2008 2004 2008 2004 2008 ...
 $ Rasmussen : int  11 21 16 16 5 5 7 10 -11 -27 ...
 $ SurveyUSA : int  18 25 21 21 15 8 5 9 -11 -24 ...
 $ DiffCount : int  5 5 1 6 8 9 8 5 -8 -5 ...
 $ PropR     : num  1 1 1 1 1 1 1 1 0 0 ...
 $ Republican: int  1 1 1 1 1 1 1 1 0 0 ...
> test = subset(polling,Year == 2012)
> str(test)
'data.frame':	45 obs. of  7 variables:
 $ State     : Factor w/ 50 levels "Alabama","Alaska",..: 3 4 5 6 7 9 10 11 12 13 ...
 $ Year      : int  2012 2012 2012 2012 2012 2012 2012 2012 2012 2012 ...
 $ Rasmussen : int  8 13 -11 3 -7 2 10 -13 32 -5 ...
 $ SurveyUSA : int  18 16 -14 -2 -13 0 8 -10 21 -18 ...
 $ DiffCount : int  4 2 -6 -5 -8 6 4 -2 1 -5 ...
 $ PropR     : num  0.833 1 0 0.308 0 ...
 $ Republican: int  1 1 0 0 0 0 1 0 1 0 ...
> table(train$Republican)

 0  1 
47 53 

> table(sign(train$Rasmussen))

-1  0  1 
42  3 55 
> #We can see 55 observation predict Republicaln win.
> #We can see 42 observation predict Democrat win.
> #We can see 3 observation predict inconclusive.
> #Now compare training set outcome against the sign of polling data.
> table(train$Republican,sign(train$Rasmussen))
   
    -1  0  1
  0 42  2  3
  1  0  1 52
> # 42 observation predict Democrat would win and Democrat actually did win.
> # 52 observation predict Republican would win and Republican actually did win.
> # 3 observation predict Democrat would win and Republican actually did win.
> #Now find correlation in train set
> cor(train)
Error in cor(train) : 'x' must be numeric
> #It not work because State is not numeric.
> #Then we select.
> cor(train[c("Rasmussen","SurveyUSA","PropR","DiffCount","Republican")])
           Rasmussen SurveyUSA     PropR DiffCount Republican
Rasmussen  1.0000000 0.9194508 0.8404803 0.5124098  0.8021191
SurveyUSA  0.9194508 1.0000000 0.8756581 0.5541816  0.8205806
PropR      0.8404803 0.8756581 1.0000000 0.8273785  0.9484204
DiffCount  0.5124098 0.5541816 0.8273785 1.0000000  0.8092777
Republican 0.8021191 0.8205806 0.9484204 0.8092777  1.0000000
> #We want to add most highly correlated with outcome Republican.
> mod1 = glm(Republican~PropR,data = train,family = "binomial")
> summary(mod1)

Call:
glm(formula = Republican ~ PropR, family = "binomial", data = train)

Deviance Residuals: 
     Min        1Q    Median        3Q       Max  
-2.22880  -0.06541   0.10260   0.10260   1.37392  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)    
(Intercept)   -6.146      1.977  -3.108 0.001882 ** 
PropR         11.390      3.153   3.613 0.000303 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 138.269  on 99  degrees of freedom
Residual deviance:  15.772  on 98  degrees of freedom
AIC: 19.772

Number of Fisher Scoring iterations: 8

> #AIC measuring the strength of model1 is 19.77
> #Now prediction on training set
> pred1 = predict(mod1,type="response")
> #Set threshold = 0.5
> table(train$Republican,pred1 >= 0.5)
   
    FALSE TRUE
  0    45    2
  1     2   51
> #We can improve on this performance by adding another variable.
> #Find pair of variables that has a relatively lower correlation with each other.
> #Because they might kind of work together to improve the prediction overall of Republican outcome.
> #If two variables are highly ,highly correlated.
> mod2 = glm(Republican~SurveyUSA+DiffCount,data = train,family = "binomial")
> pred2 = predict(mod2,type="response")
> table(train$Republican,pred2 >= 0.5)
   
    FALSE TRUE
  0    45    2
  1     1   52
> #pred2 is more better
> summary(mod2)

Call:
glm(formula = Republican ~ SurveyUSA + DiffCount, family = "binomial", 
    data = train)

Deviance Residuals: 
     Min        1Q    Median        3Q       Max  
-2.01196  -0.00698   0.01005   0.05074   1.54975  

Coefficients:
            Estimate Std. Error z value Pr(>|z|)  
(Intercept)  -1.1405     1.2456  -0.916   0.3599  
SurveyUSA     0.2976     0.1949   1.527   0.1267  
DiffCount     0.7673     0.4188   1.832   0.0669 .
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

(Dispersion parameter for binomial family taken to be 1)

    Null deviance: 138.269  on 99  degrees of freedom
Residual deviance:  12.439  on 97  degrees of freedom
AIC: 18.439

Number of Fisher Scoring iterations: 10

> #But weakness of this variables less significant statistically.
> #Now evaluate model on testing set
> table(test$Republican,sign(test$Rasmussen))
   
    -1  0  1
  0 18  2  4
  1  0  0 21
> test_prediction = predict(mod2,newdata = test,type="response")
> table(test$Republican,test_prediction >= 0.5)
   
    FALSE TRUE
  0    23    1
  1     0   21
> #All of 45 observation set we're correct
> #Actually pull out the mistake we made.
> #By limit it to when predicted true but actually Democrat won.
> subset(test,test_prediction>=0.5 & Republican == 0)
     State Year Rasmussen SurveyUSA DiffCount     PropR Republican
24 Florida 2012         2         0         6 0.6666667          0
> 